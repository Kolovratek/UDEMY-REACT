{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/milan/UDEMY-REACT/Nextjs-second-project/pages/[meetupId]/index.js\";\nimport { MongoClient } from \"mongodb\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nconst MeetupDetails = () => {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: \"https://upload.wikimedia.org/wikipedia/commons/5/59/Poprad_centrum_01.JPG\",\n    title: \"First\",\n    address: \"Poprad\",\n    description: \"hej\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n\nexport async function getStaticPaths() {\n  const uri = \"mongodb+srv://stonks159:rgRQ1ScKb1a5Kodi@firstmongodb.aas5yex.mongodb.net/?retryWrites=true&w=majority\";\n  const client = await MongoClient.connect(uri);\n  const collection = client.db(\"meetup\").collection(\"meetups\");\n  const meetups = await collection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  const uri = \"mongodb+srv://stonks159:rgRQ1ScKb1a5Kodi@firstmongodb.aas5yex.mongodb.net/?retryWrites=true&w=majority\";\n  const client = await MongoClient.connect(uri);\n  const collection = client.db(\"meetup\").collection(\"meetups\");\n  const meetups = await collection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  const meetupId = context.params.meetupId;\n  console.log(meetupId);\n  return {\n    props: {\n      meetupData: {\n        image: \"https://upload.wikimedia.org/wikipedia/commons/5/59/Poprad_centrum_01.JPG\",\n        id: meetupId,\n        title: \"First\",\n        address: \"Poprad\",\n        description: \"hej\"\n      }\n    }\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["/home/milan/UDEMY-REACT/Nextjs-second-project/pages/[meetupId]/index.js"],"names":["MongoClient","MeetupDetail","MeetupDetails","getStaticPaths","uri","client","connect","collection","db","meetups","find","_id","toArray","close","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","console","log","props","meetupData","image","id","title","address","description"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,SAA5B;AACA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAC1B,sBACE,QAAC,YAAD;AACE,IAAA,KAAK,EAAC,2EADR;AAEE,IAAA,KAAK,EAAC,OAFR;AAGE,IAAA,OAAO,EAAC,QAHV;AAIE,IAAA,WAAW,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CATD;;AAWA,OAAO,eAAeC,cAAf,GAAgC;AACrC,QAAMC,GAAG,GACP,wGADF;AAGA,QAAMC,MAAM,GAAG,MAAML,WAAW,CAACM,OAAZ,CAAoBF,GAApB,CAArB;AAEA,QAAMG,UAAU,GAAGF,MAAM,CAACG,EAAP,CAAU,QAAV,EAAoBD,UAApB,CAA+B,SAA/B,CAAnB;AAEA,QAAME,OAAO,GAAG,MAAMF,UAAU,CAACG,IAAX,CAAgB,EAAhB,EAAoB;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAApB,EAAgCC,OAAhC,EAAtB;AAEAP,EAAAA,MAAM,CAACQ,KAAP;AAEA,SAAO;AACLC,IAAAA,QAAQ,EAAE,KADL;AAELC,IAAAA,KAAK,EAAEN,OAAO,CAACO,GAAR,CAAaC,MAAD,KAAa;AAC9BC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,QAAQ,EAAEF,MAAM,CAACN,GAAP,CAAWS,QAAX;AAAZ;AADsB,KAAb,CAAZ;AAFF,GAAP;AAMD;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C,QAAMlB,GAAG,GACP,wGADF;AAGA,QAAMC,MAAM,GAAG,MAAML,WAAW,CAACM,OAAZ,CAAoBF,GAApB,CAArB;AAEA,QAAMG,UAAU,GAAGF,MAAM,CAACG,EAAP,CAAU,QAAV,EAAoBD,UAApB,CAA+B,SAA/B,CAAnB;AAEA,QAAME,OAAO,GAAG,MAAMF,UAAU,CAACG,IAAX,CAAgB,EAAhB,EAAoB;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAApB,EAAgCC,OAAhC,EAAtB;AAEAP,EAAAA,MAAM,CAACQ,KAAP;AAEA,QAAMM,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;AACA,SAAO;AACLM,IAAAA,KAAK,EAAE;AACLC,MAAAA,UAAU,EAAE;AACVC,QAAAA,KAAK,EACH,2EAFQ;AAGVC,QAAAA,EAAE,EAAET,QAHM;AAIVU,QAAAA,KAAK,EAAE,OAJG;AAKVC,QAAAA,OAAO,EAAE,QALC;AAMVC,QAAAA,WAAW,EAAE;AANH;AADP;AADF,GAAP;AAYD;AAED,eAAe7B,aAAf","sourcesContent":["import { MongoClient } from \"mongodb\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nconst MeetupDetails = () => {\n  return (\n    <MeetupDetail\n      image=\"https://upload.wikimedia.org/wikipedia/commons/5/59/Poprad_centrum_01.JPG\"\n      title=\"First\"\n      address=\"Poprad\"\n      description=\"hej\"\n    />\n  );\n};\n\nexport async function getStaticPaths() {\n  const uri =\n    \"mongodb+srv://stonks159:rgRQ1ScKb1a5Kodi@firstmongodb.aas5yex.mongodb.net/?retryWrites=true&w=majority\";\n\n  const client = await MongoClient.connect(uri);\n\n  const collection = client.db(\"meetup\").collection(\"meetups\");\n\n  const meetups = await collection.find({}, { _id: 1 }).toArray();\n\n  client.close();\n\n  return {\n    fallback: false,\n    paths: meetups.map((meetup) => ({\n      params: { meetupId: meetup._id.toString() },\n    })),\n  };\n}\n\nexport async function getStaticProps(context) {\n  const uri =\n    \"mongodb+srv://stonks159:rgRQ1ScKb1a5Kodi@firstmongodb.aas5yex.mongodb.net/?retryWrites=true&w=majority\";\n\n  const client = await MongoClient.connect(uri);\n\n  const collection = client.db(\"meetup\").collection(\"meetups\");\n\n  const meetups = await collection.find({}, { _id: 1 }).toArray();\n\n  client.close();\n\n  const meetupId = context.params.meetupId;\n  console.log(meetupId);\n  return {\n    props: {\n      meetupData: {\n        image:\n          \"https://upload.wikimedia.org/wikipedia/commons/5/59/Poprad_centrum_01.JPG\",\n        id: meetupId,\n        title: \"First\",\n        address: \"Poprad\",\n        description: \"hej\",\n      },\n    },\n  };\n}\n\nexport default MeetupDetails;\n"]},"metadata":{},"sourceType":"module"}